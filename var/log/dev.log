[2025-05-12T13:53:54.840087+00:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0" [] []
[2025-05-12T13:53:54.899127+00:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0" 0.0539 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0","total_time":0.0539} []
[2025-05-12T13:53:54.900231+00:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2025-05-12T13:53:54.900391+00:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints" [] []
[2025-05-12T13:53:54.927578+00:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" 0.026801 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm","total_time":0.026801} []
[2025-05-12T13:53:54.931830+00:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints" 0.008901 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints","total_time":0.008901} []
[2025-05-12T13:53:54.932954+00:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2025-05-12T13:53:54.937797+00:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" 0.004716 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm","total_time":0.004716} []
[2025-05-12T13:53:55.495504+00:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0" [] []
[2025-05-12T13:53:55.527801+00:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0" 0.028463 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0","total_time":0.028463} []
[2025-05-12T13:53:55.528232+00:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2025-05-12T13:53:55.528385+00:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints" [] []
[2025-05-12T13:53:55.547840+00:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" 0.019323 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm","total_time":0.019323} []
[2025-05-12T13:53:55.550337+00:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints" 0.005952 seconds {"http_code":200,"url":"https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints","total_time":0.005952} []
[2025-05-12T13:53:55.552715+00:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2025-05-12T13:53:55.562095+00:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" 0.009235 seconds {"http_code":200,"url":"https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm","total_time":0.009235} []
[2025-05-12T14:02:44.398914+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-05-12T14:02:44.596089+00:00] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2025-05-12T14:11:01.059618+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5432,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-05-12T14:11:01.175598+00:00] console.DEBUG: Command "doctrine:database:create" exited with code "1" {"command":"doctrine:database:create","code":1} []
[2025-05-12T14:11:10.693748+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"15","charset":"utf8","dbname":"postgres"}} []
[2025-05-12T14:11:15.582795+00:00] doctrine.DEBUG: Executing statement: CREATE DATABASE "wow_assistance" {"sql":"CREATE DATABASE \"wow_assistance\""} []
[2025-05-12T14:11:15.720178+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-12T14:30:48.222239+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-12T14:30:48.373602+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T14:30:48.377662+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T14:30:48.389633+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T14:30:48.390084+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T14:30:48.392880+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-05-12T14:30:48.393504+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T14:30:48.393684+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'wow_assistance'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'wow_assistance'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-05-12T14:30:48.394963+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T14:30:48.395109+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-12T14:30:48.399587+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-12T14:30:48.400694+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-12T14:30:48.401687+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-12T14:30:48.403181+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T14:30:48.412262+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T14:30:48.423342+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-05-12T14:30:48.423925+00:00] deprecation.INFO: User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Not setting the CREATE_FOREIGNKEYS flag in AbstractPlatform::getCreateTableSQL() is deprecated. In order to build the statements that create multiple tables referencing each other via foreign keys, use AbstractPlatform::getCreateTablesSQL(). (AbstractPlatform.php:2080 called by MessengerTransportDoctrineSchemaListener.php:67, https://github.com/doctrine/dbal/pull/5416, package doctrine/dbal) at /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-05-12T14:30:48.427486+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-12T14:30:48.427837+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-12T14:30:48.427969+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-12T14:30:55.684292+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-12T14:30:55.720438+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T14:31:01.517197+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T14:31:01.519342+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T14:31:01.538823+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2089, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-05-12T14:31:01.547906+00:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2025-05-12T14:31:01.561875+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T14:31:01.562851+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T14:31:01.563248+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T14:31:01.568406+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-12T14:31:01.569988+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE "user" (id SERIAL NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, pseudo VARCHAR(25) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE \"user\" (id SERIAL NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, pseudo VARCHAR(25) NOT NULL, PRIMARY KEY(id))"} []
[2025-05-12T14:31:01.578898+00:00] doctrine.DEBUG: Executing query:     CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON "user" (email) {"sql":"    CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON \"user\" (email)"} []
[2025-05-12T14:31:01.580254+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-05-12T14:31:01.585635+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"    CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2025-05-12T14:31:01.586532+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"    CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2025-05-12T14:31:01.587384+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"    CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2025-05-12T14:31:01.588149+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.created_at IS '(DC2Type:datetime_immutable)'"} []
[2025-05-12T14:31:01.588866+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.available_at IS '(DC2Type:datetime_immutable)'"} []
[2025-05-12T14:31:01.589033+00:00] doctrine.DEBUG: Executing query:     COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)' {"sql":"    COMMENT ON COLUMN messenger_messages.delivered_at IS '(DC2Type:datetime_immutable)'"} []
[2025-05-12T14:31:01.589213+00:00] doctrine.DEBUG: Executing query:     CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$         BEGIN             PERFORM pg_notify('messenger_messages', NEW.queue_name::text);             RETURN NEW;         END;     $$ LANGUAGE plpgsql; {"sql":"    CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n        BEGIN\n            PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n            RETURN NEW;\n        END;\n    $$ LANGUAGE plpgsql;"} []
[2025-05-12T14:31:01.600568+00:00] doctrine.DEBUG: Executing query:     DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"    DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2025-05-12T14:31:01.600840+00:00] doctrine.DEBUG: Executing query:     CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"    CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2025-05-12T14:31:01.602813+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250512143048","2":"2025-05-12 14:31:01","3":34}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250512143048","2":"2025-05-12 14:31:01","3":34},"types":{"1":2,"2":2,"3":1}} []
[2025-05-12T14:31:01.603749+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-05-12T14:31:01.614235+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-12T14:31:01.614660+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-12T14:31:01.614789+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-12T16:55:44.370617+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-12T16:55:44.566066+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:55:44.573889+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T16:55:44.589845+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-12T16:55:44.592256+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T16:55:44.592784+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:55:44.592919+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T16:55:44.603224+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:55:44.603486+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-12T16:55:44.605904+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:55:44.606039+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-12T16:55:44.608390+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-12T16:55:44.614245+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:55:44.614475+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-12T16:55:44.615714+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T16:55:44.617930+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T16:55:44.621735+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:55:44.622082+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T16:55:44.623071+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:55:44.623201+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T16:55:44.623839+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:55:44.624020+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-12T16:55:44.624371+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:55:44.624500+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-12T16:55:44.624938+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-12T16:55:44.626409+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:55:44.626708+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-12T16:55:44.627380+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T16:55:44.627629+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T16:55:44.629843+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-05-12T16:55:44.630083+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:55:44.630184+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'wow_assistance'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'wow_assistance'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-05-12T16:55:44.631740+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:55:44.631853+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-12T16:55:44.634903+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-12T16:55:44.635137+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T16:55:44.635257+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-12T16:55:44.636003+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-12T16:55:44.636408+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-12T16:55:44.636787+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T16:55:44.636957+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-12T16:55:44.637079+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T16:55:44.637261+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (7) ORDER BY attnum ASC"} []
[2025-05-12T16:55:44.637376+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (6) ORDER BY attnum ASC"} []
[2025-05-12T16:55:44.637483+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (4) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (4) ORDER BY attnum ASC"} []
[2025-05-12T16:55:44.637583+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T16:55:44.638610+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T16:55:44.651350+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T16:55:44.656157+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-05-12T16:55:44.658873+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-12T16:55:44.659364+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-12T16:55:44.659475+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-12T16:56:04.261331+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-12T16:56:04.368885+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:56:07.765632+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:56:07.767609+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T16:56:07.790597+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-12T16:56:07.791587+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T16:56:07.805453+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:56:07.805925+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-12T16:56:07.807973+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:56:07.808231+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-12T16:56:07.810145+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-12T16:56:07.817050+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T16:56:07.817395+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-12T16:56:07.819378+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T16:56:07.826399+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T16:56:07.827845+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T16:56:07.828197+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T16:56:07.834708+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-12T16:56:07.836795+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE character (id SERIAL NOT NULL, name_character VARCHAR(30) NOT NULL, raider_io VARCHAR(255) NOT NULL, server VARCHAR(255) NOT NULL, role VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE character (id SERIAL NOT NULL, name_character VARCHAR(30) NOT NULL, raider_io VARCHAR(255) NOT NULL, server VARCHAR(255) NOT NULL, role VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-05-12T16:56:07.848315+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250512165544","2":"2025-05-12 16:56:07","3":13}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250512165544","2":"2025-05-12 16:56:07","3":13},"types":{"1":2,"2":2,"3":1}} []
[2025-05-12T16:56:07.849350+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-05-12T16:56:07.859963+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-12T17:14:28.191641+00:00] console.CRITICAL: Error thrown while running command "make:entity Classe". Message: "Symfony\Bundle\MakerBundle\Validator::classExists(): Argument #1 ($className) must be of type string, null given, called in /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/symfony/maker-bundle/src/Validator.php on line 250" {"exception":"[object] (TypeError(code: 0): Symfony\\Bundle\\MakerBundle\\Validator::classExists(): Argument #1 ($className) must be of type string, null given, called in /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/symfony/maker-bundle/src/Validator.php on line 250 at /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/symfony/maker-bundle/src/Validator.php:194)","command":"make:entity Classe","message":"Symfony\\Bundle\\MakerBundle\\Validator::classExists(): Argument #1 ($className) must be of type string, null given, called in /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/symfony/maker-bundle/src/Validator.php on line 250"} []
[2025-05-12T17:14:28.196010+00:00] console.DEBUG: Command "make:entity Classe" exited with code "1" {"command":"make:entity Classe","code":1} []
[2025-05-12T17:14:28.196237+00:00] php.CRITICAL: Uncaught Error: Symfony\Bundle\MakerBundle\Validator::classExists(): Argument #1 ($className) must be of type string, null given, called in /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/symfony/maker-bundle/src/Validator.php on line 250 {"exception":"[object] (TypeError(code: 0): Symfony\\Bundle\\MakerBundle\\Validator::classExists(): Argument #1 ($className) must be of type string, null given, called in /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/symfony/maker-bundle/src/Validator.php on line 250 at /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/symfony/maker-bundle/src/Validator.php:194)"} []
[2025-05-12T17:14:53.615837+00:00] console.DEBUG: Command "make:entity Classe" exited with code "1" {"command":"make:entity Classe","code":1} []
[2025-05-12T17:47:44.572514+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-12T17:47:44.747717+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:47:44.753243+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T17:47:44.762690+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-12T17:47:44.763466+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T17:47:44.763933+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:47:44.764109+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T17:47:44.774516+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:47:44.774820+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-12T17:47:44.776632+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:47:44.776805+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-12T17:47:44.778221+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-12T17:47:44.784825+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:47:44.785039+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-12T17:47:44.786071+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:47:44.787593+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T17:47:44.791707+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:47:44.791872+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T17:47:44.792410+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:47:44.792539+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T17:47:44.793037+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:47:44.793170+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-12T17:47:44.793525+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:47:44.793646+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-12T17:47:44.794125+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-12T17:47:44.794979+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:47:44.795102+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-12T17:47:44.795643+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:47:44.795882+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T17:47:44.797969+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-05-12T17:47:44.798238+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:47:44.798344+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'wow_assistance'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'wow_assistance'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-05-12T17:47:44.799212+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:47:44.799319+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-12T17:47:44.802959+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-12T17:47:44.803167+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T17:47:44.803291+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-12T17:47:44.804080+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-12T17:47:44.804500+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-12T17:47:44.804870+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:47:44.805049+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:47:44.805233+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-12T17:47:44.805377+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:47:44.805578+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (7) ORDER BY attnum ASC"} []
[2025-05-12T17:47:44.805699+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (6) ORDER BY attnum ASC"} []
[2025-05-12T17:47:44.805810+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (4) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (4) ORDER BY attnum ASC"} []
[2025-05-12T17:47:44.805943+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:47:44.807274+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T17:47:44.823666+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T17:47:44.835299+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-05-12T17:47:44.836617+00:00] deprecation.INFO: User Deprecated: Passing $constraint as a Constraint object to Doctrine\DBAL\Platforms\AbstractPlatform::getDropConstraintSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:1977 called by PostgreSQLPlatform.php:816, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Passing $constraint as a Constraint object to Doctrine\\DBAL\\Platforms\\AbstractPlatform::getDropConstraintSQL is deprecated. Pass it as a quoted name instead. (AbstractPlatform.php:1977 called by PostgreSQLPlatform.php:816, https://github.com/doctrine/dbal/issues/4798, package doctrine/dbal) at /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-05-12T17:47:44.839597+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-12T17:47:44.839680+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-12T17:47:44.839829+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-12T17:47:54.222100+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-12T17:47:54.262650+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:48:01.194563+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:48:01.195761+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T17:48:01.201651+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-12T17:48:01.202924+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T17:48:01.207065+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:48:01.207296+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-12T17:48:01.208537+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:48:01.208758+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-12T17:48:01.210353+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-12T17:48:01.217692+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:48:01.217975+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-12T17:48:01.220228+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:48:01.230812+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T17:48:01.235500+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T17:48:01.236045+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T17:48:01.239180+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-12T17:48:01.240342+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE classe (id SERIAL NOT NULL, name VARCHAR(255) NOT NULL, color VARCHAR(255) DEFAULT NULL, role_principal VARCHAR(255) DEFAULT NULL, icon VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE classe (id SERIAL NOT NULL, name VARCHAR(255) NOT NULL, color VARCHAR(255) DEFAULT NULL, role_principal VARCHAR(255) DEFAULT NULL, icon VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-05-12T17:48:01.255436+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE event (id SERIAL NOT NULL, guild_id INT NOT NULL, title VARCHAR(255) NOT NULL, description TEXT DEFAULT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, type VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE event (id SERIAL NOT NULL, guild_id INT NOT NULL, title VARCHAR(255) NOT NULL, description TEXT DEFAULT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, type VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-05-12T17:48:01.257702+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_3BAE0AA75F2131EF ON event (guild_id) {"sql":"    CREATE INDEX IDX_3BAE0AA75F2131EF ON event (guild_id)"} []
[2025-05-12T17:48:01.258304+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE event_participation (id SERIAL NOT NULL, character_id INT NOT NULL, event_id INT NOT NULL, status VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE event_participation (id SERIAL NOT NULL, character_id INT NOT NULL, event_id INT NOT NULL, status VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-05-12T17:48:01.260010+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_8F0C52E31136BE75 ON event_participation (character_id) {"sql":"    CREATE INDEX IDX_8F0C52E31136BE75 ON event_participation (character_id)"} []
[2025-05-12T17:48:01.260723+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_8F0C52E371F7E88B ON event_participation (event_id) {"sql":"    CREATE INDEX IDX_8F0C52E371F7E88B ON event_participation (event_id)"} []
[2025-05-12T17:48:01.261473+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE guild (id SERIAL NOT NULL, faction VARCHAR(255) NOT NULL, server VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE guild (id SERIAL NOT NULL, faction VARCHAR(255) NOT NULL, server VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-05-12T17:48:01.263825+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE join_request (id SERIAL NOT NULL, character_id INT NOT NULL, guild_id INT NOT NULL, status VARCHAR(255) NOT NULL, submitted_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE join_request (id SERIAL NOT NULL, character_id INT NOT NULL, guild_id INT NOT NULL, status VARCHAR(255) NOT NULL, submitted_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-05-12T17:48:01.266308+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_E932E4FF1136BE75 ON join_request (character_id) {"sql":"    CREATE INDEX IDX_E932E4FF1136BE75 ON join_request (character_id)"} []
[2025-05-12T17:48:01.267237+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_E932E4FF5F2131EF ON join_request (guild_id) {"sql":"    CREATE INDEX IDX_E932E4FF5F2131EF ON join_request (guild_id)"} []
[2025-05-12T17:48:01.268238+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE loot (id SERIAL NOT NULL, character_id INT NOT NULL, type VARCHAR(255) DEFAULT NULL, count INT DEFAULT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE loot (id SERIAL NOT NULL, character_id INT NOT NULL, type VARCHAR(255) DEFAULT NULL, count INT DEFAULT NULL, PRIMARY KEY(id))"} []
[2025-05-12T17:48:01.270092+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_A632D9F71136BE75 ON loot (character_id) {"sql":"    CREATE INDEX IDX_A632D9F71136BE75 ON loot (character_id)"} []
[2025-05-12T17:48:01.270514+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE event ADD CONSTRAINT FK_3BAE0AA75F2131EF FOREIGN KEY (guild_id) REFERENCES guild (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE event ADD CONSTRAINT FK_3BAE0AA75F2131EF FOREIGN KEY (guild_id) REFERENCES guild (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-05-12T17:48:01.272595+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE event_participation ADD CONSTRAINT FK_8F0C52E31136BE75 FOREIGN KEY (character_id) REFERENCES character (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE event_participation ADD CONSTRAINT FK_8F0C52E31136BE75 FOREIGN KEY (character_id) REFERENCES character (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-05-12T17:48:01.273072+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE event_participation ADD CONSTRAINT FK_8F0C52E371F7E88B FOREIGN KEY (event_id) REFERENCES event (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE event_participation ADD CONSTRAINT FK_8F0C52E371F7E88B FOREIGN KEY (event_id) REFERENCES event (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-05-12T17:48:01.273979+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE join_request ADD CONSTRAINT FK_E932E4FF1136BE75 FOREIGN KEY (character_id) REFERENCES character (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE join_request ADD CONSTRAINT FK_E932E4FF1136BE75 FOREIGN KEY (character_id) REFERENCES character (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-05-12T17:48:01.274327+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE join_request ADD CONSTRAINT FK_E932E4FF5F2131EF FOREIGN KEY (guild_id) REFERENCES guild (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE join_request ADD CONSTRAINT FK_E932E4FF5F2131EF FOREIGN KEY (guild_id) REFERENCES guild (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-05-12T17:48:01.274565+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE loot ADD CONSTRAINT FK_A632D9F71136BE75 FOREIGN KEY (character_id) REFERENCES character (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE loot ADD CONSTRAINT FK_A632D9F71136BE75 FOREIGN KEY (character_id) REFERENCES character (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-05-12T17:48:01.274845+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE character ADD player_id INT NOT NULL {"sql":"    ALTER TABLE character ADD player_id INT NOT NULL"} []
[2025-05-12T17:48:01.274995+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE character ADD classe_id INT NOT NULL {"sql":"    ALTER TABLE character ADD classe_id INT NOT NULL"} []
[2025-05-12T17:48:01.275121+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE character ADD guild_id INT DEFAULT NULL {"sql":"    ALTER TABLE character ADD guild_id INT DEFAULT NULL"} []
[2025-05-12T17:48:01.275255+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE character ADD CONSTRAINT FK_937AB03499E6F5DF FOREIGN KEY (player_id) REFERENCES "user" (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE character ADD CONSTRAINT FK_937AB03499E6F5DF FOREIGN KEY (player_id) REFERENCES \"user\" (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-05-12T17:48:01.276062+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE character ADD CONSTRAINT FK_937AB0348F5EA509 FOREIGN KEY (classe_id) REFERENCES classe (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE character ADD CONSTRAINT FK_937AB0348F5EA509 FOREIGN KEY (classe_id) REFERENCES classe (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-05-12T17:48:01.276375+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE character ADD CONSTRAINT FK_937AB0345F2131EF FOREIGN KEY (guild_id) REFERENCES guild (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE character ADD CONSTRAINT FK_937AB0345F2131EF FOREIGN KEY (guild_id) REFERENCES guild (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-05-12T17:48:01.276620+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_937AB03499E6F5DF ON character (player_id) {"sql":"    CREATE INDEX IDX_937AB03499E6F5DF ON character (player_id)"} []
[2025-05-12T17:48:01.278191+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_937AB0348F5EA509 ON character (classe_id) {"sql":"    CREATE INDEX IDX_937AB0348F5EA509 ON character (classe_id)"} []
[2025-05-12T17:48:01.278517+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_937AB0345F2131EF ON character (guild_id) {"sql":"    CREATE INDEX IDX_937AB0345F2131EF ON character (guild_id)"} []
[2025-05-12T17:48:01.279084+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250512174744","2":"2025-05-12 17:48:01","3":39}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250512174744","2":"2025-05-12 17:48:01","3":39},"types":{"1":2,"2":2,"3":1}} []
[2025-05-12T17:48:01.279760+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-05-12T17:48:01.285447+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-12T17:49:57.536842+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-12T17:49:57.578024+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:49:57.579280+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T17:49:57.581672+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-12T17:49:57.582033+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T17:49:57.582202+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:49:57.582353+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T17:49:57.586322+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:49:57.586505+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-12T17:49:57.587093+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:49:57.587212+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-12T17:49:57.587879+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-12T17:49:57.590561+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:49:57.590728+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-12T17:49:57.591339+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.592429+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T17:49:57.593886+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:49:57.594013+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T17:49:57.594511+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:49:57.594605+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T17:49:57.595011+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:49:57.595098+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-12T17:49:57.595374+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:49:57.595470+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-12T17:49:57.595874+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-12T17:49:57.596664+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:49:57.596757+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-12T17:49:57.597254+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.597464+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T17:49:57.598343+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-05-12T17:49:57.598518+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:49:57.598597+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'wow_assistance'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'wow_assistance'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-05-12T17:49:57.599306+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:49:57.599405+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-12T17:49:57.602165+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-12T17:49:57.602335+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T17:49:57.602447+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-12T17:49:57.603234+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-12T17:49:57.603690+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-12T17:49:57.604083+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (3) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (3) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.604224+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.604347+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.604926+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.605058+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.605236+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58001 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58001 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.605389+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57970 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57970 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.605537+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.605657+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.605811+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.605974+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.606140+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.606340+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (8) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (8) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.606479+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (7) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.606609+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (6) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.606759+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.607011+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (7) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.607140+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (6) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.607256+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (4) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (4) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.607376+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.607517+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (3) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (3) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.607637+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.607761+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:49:57.608388+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T17:49:57.616116+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T17:49:57.623302+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-05-12T17:49:57.625271+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-12T17:49:57.625358+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-12T17:49:57.625551+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-12T17:50:05.302933+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-12T17:50:05.336435+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:50:08.697466+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:50:08.698191+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-12T17:50:08.702655+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-12T17:50:08.703463+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-12T17:50:08.707365+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:50:08.707682+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-12T17:50:08.708998+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:50:08.709138+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-12T17:50:08.710634+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-12T17:50:08.716807+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-12T17:50:08.717010+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-12T17:50:08.718441+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-12T17:50:08.721389+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T17:50:08.721995+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T17:50:08.722177+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-12T17:50:08.725746+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-12T17:50:08.726811+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE guild ADD name VARCHAR(255) NOT NULL {"sql":"    ALTER TABLE guild ADD name VARCHAR(255) NOT NULL"} []
[2025-05-12T17:50:08.729439+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250512174957","2":"2025-05-12 17:50:08","3":3}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250512174957","2":"2025-05-12 17:50:08","3":3},"types":{"1":2,"2":2,"3":1}} []
[2025-05-12T17:50:08.730149+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-05-12T17:50:08.737657+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-13T08:56:54.990052+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-13T08:56:55.253683+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:56:55.257709+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T08:56:55.267762+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-13T08:56:55.268992+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T08:56:55.269587+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:56:55.269937+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T08:56:55.274822+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:56:55.275057+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-13T08:56:55.277262+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:56:55.277409+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-13T08:56:55.278939+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-13T08:56:55.286168+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:56:55.286461+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-13T08:56:55.287609+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.290547+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T08:56:55.295755+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:56:55.296036+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T08:56:55.296734+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:56:55.296938+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T08:56:55.297678+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:56:55.297928+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-13T08:56:55.298667+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:56:55.298796+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-13T08:56:55.299254+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-13T08:56:55.300164+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:56:55.300283+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-13T08:56:55.300881+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.301095+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T08:56:55.302050+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-05-13T08:56:55.302248+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:56:55.302332+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'wow_assistance'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'wow_assistance'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-05-13T08:56:55.303924+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:56:55.304276+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-13T08:56:55.309510+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-13T08:56:55.309805+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T08:56:55.309915+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-13T08:56:55.311465+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-13T08:56:55.312393+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-13T08:56:55.313847+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (3) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (3) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.314151+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.314388+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.315590+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.315833+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.316000+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58001 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58001 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.316308+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57970 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57970 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.316895+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.317047+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.317268+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.317455+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.317676+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.317907+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (8) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (8) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.318085+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (7) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.318271+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (6) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.318412+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.318702+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (7) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.318906+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (6) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.319033+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (4) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (4) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.319150+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.319307+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (3) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (3) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.319462+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.319681+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T08:56:55.321423+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T08:56:55.331690+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T08:56:55.340086+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-05-13T08:56:55.343758+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-13T08:56:55.343879+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-13T08:56:55.344038+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-13T08:57:02.184209+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-13T08:57:02.219634+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:57:13.786014+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:57:13.788219+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T08:57:13.793505+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-13T08:57:13.794879+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T08:57:13.799636+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:57:13.800089+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-13T08:57:13.801920+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:57:13.802472+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-13T08:57:13.810606+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-13T08:57:13.818804+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T08:57:13.819139+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-13T08:57:13.820888+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T08:57:13.825605+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T08:57:13.826385+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T08:57:13.826534+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T08:57:13.829912+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-13T08:57:13.830796+00:00] doctrine.DEBUG: Executing query:     CREATE TABLE specialisation (id SERIAL NOT NULL, classe_id INT NOT NULL, name VARCHAR(255) NOT NULL, role VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"    CREATE TABLE specialisation (id SERIAL NOT NULL, classe_id INT NOT NULL, name VARCHAR(255) NOT NULL, role VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2025-05-13T08:57:13.842980+00:00] doctrine.DEBUG: Executing query:     CREATE INDEX IDX_B9D6A3A28F5EA509 ON specialisation (classe_id) {"sql":"    CREATE INDEX IDX_B9D6A3A28F5EA509 ON specialisation (classe_id)"} []
[2025-05-13T08:57:13.843745+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE specialisation ADD CONSTRAINT FK_B9D6A3A28F5EA509 FOREIGN KEY (classe_id) REFERENCES classe (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"    ALTER TABLE specialisation ADD CONSTRAINT FK_B9D6A3A28F5EA509 FOREIGN KEY (classe_id) REFERENCES classe (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2025-05-13T08:57:13.847831+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250513085655","2":"2025-05-13 08:57:13","3":17}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250513085655","2":"2025-05-13 08:57:13","3":17},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T08:57:13.848544+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-05-13T08:57:13.857463+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-13T09:00:32.548437+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-13T09:00:32.631546+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:00:35.752010+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-13T09:00:35.761002+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event_participation {"sql":"DELETE FROM event_participation"} []
[2025-05-13T09:00:35.766964+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event {"sql":"DELETE FROM event"} []
[2025-05-13T09:00:35.769056+00:00] doctrine.DEBUG: Executing statement: DELETE FROM loot {"sql":"DELETE FROM loot"} []
[2025-05-13T09:00:35.769905+00:00] doctrine.DEBUG: Executing statement: DELETE FROM join_request {"sql":"DELETE FROM join_request"} []
[2025-05-13T09:00:35.770682+00:00] doctrine.DEBUG: Executing statement: DELETE FROM character {"sql":"DELETE FROM character"} []
[2025-05-13T09:00:35.772062+00:00] doctrine.DEBUG: Executing statement: DELETE FROM guild {"sql":"DELETE FROM guild"} []
[2025-05-13T09:00:35.772735+00:00] doctrine.DEBUG: Executing statement: DELETE FROM specialisation {"sql":"DELETE FROM specialisation"} []
[2025-05-13T09:00:35.774318+00:00] doctrine.DEBUG: Executing statement: DELETE FROM classe {"sql":"DELETE FROM classe"} []
[2025-05-13T09:00:35.774977+00:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-05-13T09:00:35.786906+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Guerrier"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Guerrier"},"types":{"1":2}} []
[2025-05-13T09:00:35.791756+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Mage"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Mage"},"types":{"1":2}} []
[2025-05-13T09:00:35.792167+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chasseur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chasseur"},"types":{"1":2}} []
[2025-05-13T09:00:35.792394+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Paladin"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Paladin"},"types":{"1":2}} []
[2025-05-13T09:00:35.792615+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Prêtre"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Prêtre"},"types":{"1":2}} []
[2025-05-13T09:00:35.793297+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Voleur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Voleur"},"types":{"1":2}} []
[2025-05-13T09:00:35.793610+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Démoniste"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Démoniste"},"types":{"1":2}} []
[2025-05-13T09:00:35.793826+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Druide"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Druide"},"types":{"1":2}} []
[2025-05-13T09:00:35.794001+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chaman"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chaman"},"types":{"1":2}} []
[2025-05-13T09:00:35.794189+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chevalier de la mort"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chevalier de la mort"},"types":{"1":2}} []
[2025-05-13T09:00:35.794377+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Moine"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Moine"},"types":{"1":2}} []
[2025-05-13T09:00:35.794545+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chasseur de démons"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chasseur de démons"},"types":{"1":2}} []
[2025-05-13T09:00:35.794727+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Évocateur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Évocateur"},"types":{"1":2}} []
[2025-05-13T09:00:35.794893+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-05-13T09:00:35.796243+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-13T09:01:02.890897+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-13T09:01:02.928902+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:01:05.839473+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-13T09:01:05.847767+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event_participation {"sql":"DELETE FROM event_participation"} []
[2025-05-13T09:01:05.849052+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event {"sql":"DELETE FROM event"} []
[2025-05-13T09:01:05.849467+00:00] doctrine.DEBUG: Executing statement: DELETE FROM loot {"sql":"DELETE FROM loot"} []
[2025-05-13T09:01:05.849919+00:00] doctrine.DEBUG: Executing statement: DELETE FROM join_request {"sql":"DELETE FROM join_request"} []
[2025-05-13T09:01:05.850838+00:00] doctrine.DEBUG: Executing statement: DELETE FROM character {"sql":"DELETE FROM character"} []
[2025-05-13T09:01:05.851644+00:00] doctrine.DEBUG: Executing statement: DELETE FROM guild {"sql":"DELETE FROM guild"} []
[2025-05-13T09:01:05.852036+00:00] doctrine.DEBUG: Executing statement: DELETE FROM specialisation {"sql":"DELETE FROM specialisation"} []
[2025-05-13T09:01:05.852519+00:00] doctrine.DEBUG: Executing statement: DELETE FROM classe {"sql":"DELETE FROM classe"} []
[2025-05-13T09:01:05.852851+00:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-05-13T09:01:05.863554+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Guerrier"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Guerrier"},"types":{"1":2}} []
[2025-05-13T09:01:05.869590+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Mage"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Mage"},"types":{"1":2}} []
[2025-05-13T09:01:05.870075+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chasseur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chasseur"},"types":{"1":2}} []
[2025-05-13T09:01:05.870315+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Paladin"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Paladin"},"types":{"1":2}} []
[2025-05-13T09:01:05.870514+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Prêtre"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Prêtre"},"types":{"1":2}} []
[2025-05-13T09:01:05.870707+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Voleur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Voleur"},"types":{"1":2}} []
[2025-05-13T09:01:05.870909+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Démoniste"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Démoniste"},"types":{"1":2}} []
[2025-05-13T09:01:05.871137+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Druide"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Druide"},"types":{"1":2}} []
[2025-05-13T09:01:05.871364+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chaman"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chaman"},"types":{"1":2}} []
[2025-05-13T09:01:05.871569+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chevalier de la mort"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chevalier de la mort"},"types":{"1":2}} []
[2025-05-13T09:01:05.871759+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Moine"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Moine"},"types":{"1":2}} []
[2025-05-13T09:01:05.871935+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chasseur de démons"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chasseur de démons"},"types":{"1":2}} []
[2025-05-13T09:01:05.872115+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Évocateur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Évocateur"},"types":{"1":2}} []
[2025-05-13T09:01:05.872324+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-05-13T09:01:05.873490+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-13T09:04:23.236621+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-13T09:04:23.326110+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:04:30.070769+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-13T09:04:30.110111+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event_participation {"sql":"DELETE FROM event_participation"} []
[2025-05-13T09:04:30.116733+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event {"sql":"DELETE FROM event"} []
[2025-05-13T09:04:30.117555+00:00] doctrine.DEBUG: Executing statement: DELETE FROM loot {"sql":"DELETE FROM loot"} []
[2025-05-13T09:04:30.118242+00:00] doctrine.DEBUG: Executing statement: DELETE FROM join_request {"sql":"DELETE FROM join_request"} []
[2025-05-13T09:04:30.118876+00:00] doctrine.DEBUG: Executing statement: DELETE FROM character {"sql":"DELETE FROM character"} []
[2025-05-13T09:04:30.120604+00:00] doctrine.DEBUG: Executing statement: DELETE FROM guild {"sql":"DELETE FROM guild"} []
[2025-05-13T09:04:30.121132+00:00] doctrine.DEBUG: Executing statement: DELETE FROM specialisation {"sql":"DELETE FROM specialisation"} []
[2025-05-13T09:04:30.122304+00:00] doctrine.DEBUG: Executing statement: DELETE FROM classe {"sql":"DELETE FROM classe"} []
[2025-05-13T09:04:30.122775+00:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-05-13T09:04:30.137590+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:04:30.151449+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Guerrier","2":"#C79C6E","3":null,"4":"warrior.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Guerrier","2":"#C79C6E","3":null,"4":"warrior.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:04:30.155243+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Mage","2":"#69CCF0","3":null,"4":"mage.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Mage","2":"#69CCF0","3":null,"4":"mage.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:04:30.156038+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chasseur","2":"#ABD473","3":null,"4":"hunter.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chasseur","2":"#ABD473","3":null,"4":"hunter.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:04:30.156523+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Voleur","2":"#FFF569","3":null,"4":"rogue.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Voleur","2":"#FFF569","3":null,"4":"rogue.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:04:30.156809+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Prêtre","2":"#FFFFFF","3":null,"4":"priest.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Prêtre","2":"#FFFFFF","3":null,"4":"priest.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:04:30.157483+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Démoniste","2":"#9482C9","3":null,"4":"warlock.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Démoniste","2":"#9482C9","3":null,"4":"warlock.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:04:30.157774+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Druide","2":"#FF7D0A","3":null,"4":"druid.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Druide","2":"#FF7D0A","3":null,"4":"druid.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:04:30.158043+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chaman","2":"#0070DE","3":null,"4":"shaman.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chaman","2":"#0070DE","3":null,"4":"shaman.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:04:30.158286+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Paladin","2":"#F58CBA","3":null,"4":"paladin.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Paladin","2":"#F58CBA","3":null,"4":"paladin.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:04:30.158614+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chevalier de la mort","2":"#C41F3B","3":null,"4":"dk.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chevalier de la mort","2":"#C41F3B","3":null,"4":"dk.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:04:30.158979+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Moine","2":"#00FF96","3":null,"4":"monk.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Moine","2":"#00FF96","3":null,"4":"monk.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:04:30.159299+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chasseur de démons","2":"#A330C9","3":null,"4":"dh.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chasseur de démons","2":"#A330C9","3":null,"4":"dh.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:04:30.159607+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Évocateur","2":"#33937F","3":null,"4":"evoker.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Évocateur","2":"#33937F","3":null,"4":"evoker.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:04:30.160339+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:04:30.161941+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Guerrier"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Guerrier"},"types":{"1":2}} []
[2025-05-13T09:04:30.168227+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Mage"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Mage"},"types":{"1":2}} []
[2025-05-13T09:04:30.168696+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chasseur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chasseur"},"types":{"1":2}} []
[2025-05-13T09:04:30.168979+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Paladin"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Paladin"},"types":{"1":2}} []
[2025-05-13T09:04:30.169494+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Prêtre"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Prêtre"},"types":{"1":2}} []
[2025-05-13T09:04:30.169844+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Voleur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Voleur"},"types":{"1":2}} []
[2025-05-13T09:04:30.170152+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Démoniste"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Démoniste"},"types":{"1":2}} []
[2025-05-13T09:04:30.170594+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Druide"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Druide"},"types":{"1":2}} []
[2025-05-13T09:04:30.171168+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chaman"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chaman"},"types":{"1":2}} []
[2025-05-13T09:04:30.171689+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chevalier de la mort"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chevalier de la mort"},"types":{"1":2}} []
[2025-05-13T09:04:30.172117+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Moine"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Moine"},"types":{"1":2}} []
[2025-05-13T09:04:30.172365+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chasseur de démons"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chasseur de démons"},"types":{"1":2}} []
[2025-05-13T09:04:30.172773+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Évocateur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Évocateur"},"types":{"1":2}} []
[2025-05-13T09:04:30.174619+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:04:30.176868+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Arms","2":"DPS","3":1}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Arms","2":"DPS","3":1},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.180436+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Fury","2":"DPS","3":1}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Fury","2":"DPS","3":1},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.180825+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Protection","2":"Tank","3":1}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Protection","2":"Tank","3":1},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.181203+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Feu","2":"DPS","3":2}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Feu","2":"DPS","3":2},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.181712+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Givre","2":"DPS","3":2}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Givre","2":"DPS","3":2},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.182441+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Arcane","2":"DPS","3":2}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Arcane","2":"DPS","3":2},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.183004+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Précision","2":"DPS","3":3}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Précision","2":"DPS","3":3},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.183450+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Maîtrise des bêtes","2":"DPS","3":3}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Maîtrise des bêtes","2":"DPS","3":3},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.183851+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Survie","2":"DPS","3":3}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Survie","2":"DPS","3":3},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.184141+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Sacré","2":"Heal","3":9}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Sacré","2":"Heal","3":9},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.184410+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Protection","2":"Tank","3":9}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Protection","2":"Tank","3":9},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.184663+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Vindicte","2":"DPS","3":9}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Vindicte","2":"DPS","3":9},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.184921+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Discipline","2":"Heal","3":5}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Discipline","2":"Heal","3":5},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.185204+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Sacré","2":"Heal","3":5}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Sacré","2":"Heal","3":5},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.185481+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Ombre","2":"DPS","3":5}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Ombre","2":"DPS","3":5},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.185738+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Assassinat","2":"DPS","3":4}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Assassinat","2":"DPS","3":4},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.186008+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Finesse","2":"DPS","3":4}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Finesse","2":"DPS","3":4},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.186240+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Hors-la-loi","2":"DPS","3":4}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Hors-la-loi","2":"DPS","3":4},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.186474+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Destruction","2":"DPS","3":6}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Destruction","2":"DPS","3":6},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.186698+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Démonologie","2":"DPS","3":6}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Démonologie","2":"DPS","3":6},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.186960+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Affliction","2":"DPS","3":6}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Affliction","2":"DPS","3":6},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.187211+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Équilibre","2":"DPS","3":7}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Équilibre","2":"DPS","3":7},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.187481+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Farouche","2":"DPS","3":7}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Farouche","2":"DPS","3":7},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.187736+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Gardien","2":"Tank","3":7}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Gardien","2":"Tank","3":7},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.188088+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Restauration","2":"Heal","3":7}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Restauration","2":"Heal","3":7},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.188425+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Amélioration","2":"DPS","3":8}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Amélioration","2":"DPS","3":8},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.188712+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Élémentaire","2":"DPS","3":8}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Élémentaire","2":"DPS","3":8},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.189316+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Restauration","2":"Heal","3":8}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Restauration","2":"Heal","3":8},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.189628+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Sang","2":"Tank","3":10}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Sang","2":"Tank","3":10},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.189878+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Givre","2":"DPS","3":10}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Givre","2":"DPS","3":10},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.190179+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Impie","2":"DPS","3":10}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Impie","2":"DPS","3":10},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.190945+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Maître brasseur","2":"Tank","3":11}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Maître brasseur","2":"Tank","3":11},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.191472+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Tisse-brume","2":"Heal","3":11}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Tisse-brume","2":"Heal","3":11},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.191979+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Marche-vent","2":"DPS","3":11}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Marche-vent","2":"DPS","3":11},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.192499+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Dévastation","2":"DPS","3":12}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Dévastation","2":"DPS","3":12},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.192936+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Vengeance","2":"Tank","3":12}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Vengeance","2":"Tank","3":12},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.193234+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Augmentation","2":"DPS","3":13}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Augmentation","2":"DPS","3":13},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.193588+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Préservation","2":"Heal","3":13}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Préservation","2":"Heal","3":13},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.193893+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Dévastation","2":"DPS","3":13}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Dévastation","2":"DPS","3":13},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:04:30.194180+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:04:30.194306+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-05-13T09:04:30.195730+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-13T09:05:54.790119+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-13T09:05:54.843831+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:05:56.929587+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-13T09:05:56.937604+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event_participation {"sql":"DELETE FROM event_participation"} []
[2025-05-13T09:05:56.939160+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event {"sql":"DELETE FROM event"} []
[2025-05-13T09:05:56.939613+00:00] doctrine.DEBUG: Executing statement: DELETE FROM loot {"sql":"DELETE FROM loot"} []
[2025-05-13T09:05:56.940026+00:00] doctrine.DEBUG: Executing statement: DELETE FROM join_request {"sql":"DELETE FROM join_request"} []
[2025-05-13T09:05:56.940598+00:00] doctrine.DEBUG: Executing statement: DELETE FROM character {"sql":"DELETE FROM character"} []
[2025-05-13T09:05:56.941782+00:00] doctrine.DEBUG: Executing statement: DELETE FROM guild {"sql":"DELETE FROM guild"} []
[2025-05-13T09:05:56.942284+00:00] doctrine.DEBUG: Executing statement: DELETE FROM specialisation {"sql":"DELETE FROM specialisation"} []
[2025-05-13T09:05:56.943182+00:00] doctrine.DEBUG: Executing statement: DELETE FROM classe {"sql":"DELETE FROM classe"} []
[2025-05-13T09:05:56.945214+00:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-05-13T09:05:56.950166+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:05:56.955679+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Guerrier","2":"#C79C6E","3":null,"4":"warrior.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Guerrier","2":"#C79C6E","3":null,"4":"warrior.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:05:56.956589+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Mage","2":"#69CCF0","3":null,"4":"mage.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Mage","2":"#69CCF0","3":null,"4":"mage.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:05:56.956912+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chasseur","2":"#ABD473","3":null,"4":"hunter.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chasseur","2":"#ABD473","3":null,"4":"hunter.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:05:56.957215+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Voleur","2":"#FFF569","3":null,"4":"rogue.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Voleur","2":"#FFF569","3":null,"4":"rogue.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:05:56.957496+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Prêtre","2":"#FFFFFF","3":null,"4":"priest.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Prêtre","2":"#FFFFFF","3":null,"4":"priest.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:05:56.957806+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Démoniste","2":"#9482C9","3":null,"4":"warlock.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Démoniste","2":"#9482C9","3":null,"4":"warlock.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:05:56.958094+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Druide","2":"#FF7D0A","3":null,"4":"druid.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Druide","2":"#FF7D0A","3":null,"4":"druid.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:05:56.958367+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chaman","2":"#0070DE","3":null,"4":"shaman.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chaman","2":"#0070DE","3":null,"4":"shaman.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:05:56.958616+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Paladin","2":"#F58CBA","3":null,"4":"paladin.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Paladin","2":"#F58CBA","3":null,"4":"paladin.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:05:56.958870+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chevalier de la mort","2":"#C41F3B","3":null,"4":"dk.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chevalier de la mort","2":"#C41F3B","3":null,"4":"dk.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:05:56.959190+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Moine","2":"#00FF96","3":null,"4":"monk.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Moine","2":"#00FF96","3":null,"4":"monk.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:05:56.959485+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chasseur de démons","2":"#A330C9","3":null,"4":"dh.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chasseur de démons","2":"#A330C9","3":null,"4":"dh.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:05:56.959776+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Évocateur","2":"#33937F","3":null,"4":"evoker.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Évocateur","2":"#33937F","3":null,"4":"evoker.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:05:56.960351+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:05:56.961207+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Guerrier"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Guerrier"},"types":{"1":2}} []
[2025-05-13T09:05:56.964520+00:00] doctrine.DEBUG: Rolling back transaction [] []
[2025-05-13T09:05:56.974080+00:00] console.CRITICAL: Error thrown while running command "doctrine:fixtures:load". Message: "Warning: Undefined array key "role_principal"" {"exception":"[object] (ErrorException(code: 0): Warning: Undefined array key \"role_principal\" at /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/src/DataFixtures/SpecialisationFixtures.php:89)","command":"doctrine:fixtures:load","message":"Warning: Undefined array key \"role_principal\""} []
[2025-05-13T09:05:56.974482+00:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "1" {"command":"doctrine:fixtures:load","code":1} []
[2025-05-13T09:05:56.980991+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-13T09:06:26.883673+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-13T09:06:26.939223+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:06:27.787217+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-13T09:06:27.796180+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event_participation {"sql":"DELETE FROM event_participation"} []
[2025-05-13T09:06:27.797418+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event {"sql":"DELETE FROM event"} []
[2025-05-13T09:06:27.797952+00:00] doctrine.DEBUG: Executing statement: DELETE FROM loot {"sql":"DELETE FROM loot"} []
[2025-05-13T09:06:27.798380+00:00] doctrine.DEBUG: Executing statement: DELETE FROM join_request {"sql":"DELETE FROM join_request"} []
[2025-05-13T09:06:27.798881+00:00] doctrine.DEBUG: Executing statement: DELETE FROM character {"sql":"DELETE FROM character"} []
[2025-05-13T09:06:27.799696+00:00] doctrine.DEBUG: Executing statement: DELETE FROM guild {"sql":"DELETE FROM guild"} []
[2025-05-13T09:06:27.800075+00:00] doctrine.DEBUG: Executing statement: DELETE FROM specialisation {"sql":"DELETE FROM specialisation"} []
[2025-05-13T09:06:27.800557+00:00] doctrine.DEBUG: Executing statement: DELETE FROM classe {"sql":"DELETE FROM classe"} []
[2025-05-13T09:06:27.802447+00:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-05-13T09:06:27.807297+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:06:27.813603+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Guerrier","2":"#C79C6E","3":null,"4":"warrior.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Guerrier","2":"#C79C6E","3":null,"4":"warrior.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:06:27.814521+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Mage","2":"#69CCF0","3":null,"4":"mage.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Mage","2":"#69CCF0","3":null,"4":"mage.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:06:27.814827+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chasseur","2":"#ABD473","3":null,"4":"hunter.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chasseur","2":"#ABD473","3":null,"4":"hunter.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:06:27.815125+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Voleur","2":"#FFF569","3":null,"4":"rogue.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Voleur","2":"#FFF569","3":null,"4":"rogue.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:06:27.815395+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Prêtre","2":"#FFFFFF","3":null,"4":"priest.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Prêtre","2":"#FFFFFF","3":null,"4":"priest.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:06:27.815668+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Démoniste","2":"#9482C9","3":null,"4":"warlock.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Démoniste","2":"#9482C9","3":null,"4":"warlock.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:06:27.815900+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Druide","2":"#FF7D0A","3":null,"4":"druid.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Druide","2":"#FF7D0A","3":null,"4":"druid.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:06:27.816146+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chaman","2":"#0070DE","3":null,"4":"shaman.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chaman","2":"#0070DE","3":null,"4":"shaman.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:06:27.816433+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Paladin","2":"#F58CBA","3":null,"4":"paladin.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Paladin","2":"#F58CBA","3":null,"4":"paladin.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:06:27.816668+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chevalier de la mort","2":"#C41F3B","3":null,"4":"dk.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chevalier de la mort","2":"#C41F3B","3":null,"4":"dk.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:06:27.816878+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Moine","2":"#00FF96","3":null,"4":"monk.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Moine","2":"#00FF96","3":null,"4":"monk.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:06:27.817106+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chasseur de démons","2":"#A330C9","3":null,"4":"dh.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chasseur de démons","2":"#A330C9","3":null,"4":"dh.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:06:27.817655+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Évocateur","2":"#33937F","3":null,"4":"evoker.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Évocateur","2":"#33937F","3":null,"4":"evoker.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:06:27.818066+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:06:27.818696+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Guerrier"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Guerrier"},"types":{"1":2}} []
[2025-05-13T09:06:27.821458+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Mage"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Mage"},"types":{"1":2}} []
[2025-05-13T09:06:27.821904+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chasseur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chasseur"},"types":{"1":2}} []
[2025-05-13T09:06:27.822138+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Paladin"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Paladin"},"types":{"1":2}} []
[2025-05-13T09:06:27.822385+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Prêtre"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Prêtre"},"types":{"1":2}} []
[2025-05-13T09:06:27.822602+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Voleur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Voleur"},"types":{"1":2}} []
[2025-05-13T09:06:27.822858+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Démoniste"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Démoniste"},"types":{"1":2}} []
[2025-05-13T09:06:27.823098+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Druide"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Druide"},"types":{"1":2}} []
[2025-05-13T09:06:27.823303+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chaman"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chaman"},"types":{"1":2}} []
[2025-05-13T09:06:27.823495+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chevalier de la mort"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chevalier de la mort"},"types":{"1":2}} []
[2025-05-13T09:06:27.823690+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Moine"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Moine"},"types":{"1":2}} []
[2025-05-13T09:06:27.823939+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chasseur de démons"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chasseur de démons"},"types":{"1":2}} []
[2025-05-13T09:06:27.824170+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Évocateur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Évocateur"},"types":{"1":2}} []
[2025-05-13T09:06:27.824564+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:06:27.824941+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Arms","2":"DPS","3":27}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Arms","2":"DPS","3":27},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.825675+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Fury","2":"DPS","3":27}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Fury","2":"DPS","3":27},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.826130+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Protection","2":"Tank","3":27}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Protection","2":"Tank","3":27},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.826441+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Feu","2":"DPS","3":28}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Feu","2":"DPS","3":28},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.826769+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Givre","2":"DPS","3":28}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Givre","2":"DPS","3":28},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.827144+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Arcane","2":"DPS","3":28}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Arcane","2":"DPS","3":28},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.827489+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Précision","2":"DPS","3":29}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Précision","2":"DPS","3":29},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.827767+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Maîtrise des bêtes","2":"DPS","3":29}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Maîtrise des bêtes","2":"DPS","3":29},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.828036+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Survie","2":"DPS","3":29}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Survie","2":"DPS","3":29},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.828306+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Sacré","2":"Heal","3":35}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Sacré","2":"Heal","3":35},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.828563+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Protection","2":"Tank","3":35}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Protection","2":"Tank","3":35},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.829099+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Vindicte","2":"DPS","3":35}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Vindicte","2":"DPS","3":35},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.829412+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Discipline","2":"Heal","3":31}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Discipline","2":"Heal","3":31},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.829701+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Sacré","2":"Heal","3":31}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Sacré","2":"Heal","3":31},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.830092+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Ombre","2":"DPS","3":31}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Ombre","2":"DPS","3":31},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.830414+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Assassinat","2":"DPS","3":30}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Assassinat","2":"DPS","3":30},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.830722+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Finesse","2":"DPS","3":30}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Finesse","2":"DPS","3":30},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.831102+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Hors-la-loi","2":"DPS","3":30}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Hors-la-loi","2":"DPS","3":30},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.831420+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Destruction","2":"DPS","3":32}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Destruction","2":"DPS","3":32},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.831751+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Démonologie","2":"DPS","3":32}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Démonologie","2":"DPS","3":32},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.832047+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Affliction","2":"DPS","3":32}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Affliction","2":"DPS","3":32},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.832341+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Équilibre","2":"DPS","3":33}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Équilibre","2":"DPS","3":33},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.832636+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Farouche","2":"DPS","3":33}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Farouche","2":"DPS","3":33},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.833545+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Gardien","2":"Tank","3":33}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Gardien","2":"Tank","3":33},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.835068+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Restauration","2":"Heal","3":33}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Restauration","2":"Heal","3":33},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.835513+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Amélioration","2":"DPS","3":34}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Amélioration","2":"DPS","3":34},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.836257+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Élémentaire","2":"DPS","3":34}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Élémentaire","2":"DPS","3":34},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.837093+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Restauration","2":"Heal","3":34}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Restauration","2":"Heal","3":34},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.837544+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Sang","2":"Tank","3":36}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Sang","2":"Tank","3":36},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.837897+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Givre","2":"DPS","3":36}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Givre","2":"DPS","3":36},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.838221+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Impie","2":"DPS","3":36}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Impie","2":"DPS","3":36},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.838502+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Maître brasseur","2":"Tank","3":37}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Maître brasseur","2":"Tank","3":37},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.838894+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Tisse-brume","2":"Heal","3":37}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Tisse-brume","2":"Heal","3":37},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.839216+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Marche-vent","2":"DPS","3":37}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Marche-vent","2":"DPS","3":37},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.839544+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Dévastation","2":"DPS","3":38}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Dévastation","2":"DPS","3":38},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.839852+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Vengeance","2":"Tank","3":38}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Vengeance","2":"Tank","3":38},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.840207+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Augmentation","2":"DPS","3":39}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Augmentation","2":"DPS","3":39},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.840519+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Préservation","2":"Heal","3":39}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Préservation","2":"Heal","3":39},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.840894+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Dévastation","2":"DPS","3":39}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Dévastation","2":"DPS","3":39},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:06:27.841322+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:06:27.841485+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-05-13T09:06:27.842702+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-13T09:08:49.821006+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-13T09:08:49.908904+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:49.910068+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T09:08:49.912674+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-13T09:08:49.913110+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T09:08:49.913270+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:49.913424+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T09:08:49.917554+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:49.917740+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-13T09:08:49.918376+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:49.918667+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-13T09:08:49.919525+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-13T09:08:49.922491+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:49.922611+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-13T09:08:49.923468+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.924520+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T09:08:49.926778+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:49.926943+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T09:08:49.927457+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:49.927571+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T09:08:49.928019+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:49.928128+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-13T09:08:49.928425+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:49.928530+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-13T09:08:49.928929+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-13T09:08:49.929690+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:49.929791+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-13T09:08:49.930284+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.930492+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T09:08:49.931382+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-05-13T09:08:49.931604+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:49.931713+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'wow_assistance'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'wow_assistance'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-05-13T09:08:49.932673+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:49.932807+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-13T09:08:49.935857+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-13T09:08:49.936073+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T09:08:49.936198+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-13T09:08:49.937067+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-13T09:08:49.937721+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-13T09:08:49.938146+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.938298+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.938930+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (7) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.939058+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (6) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.939176+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (4) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (4) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.939273+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.939424+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57970 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57970 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.939609+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (8) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (8) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.939726+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (7) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.939823+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (6) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.939912+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.940060+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58077 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58077 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.940153+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58077 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58077 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.940284+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.940402+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (3) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (3) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.940489+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.940576+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.940712+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.940804+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.940925+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.941009+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.941124+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (3) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (3) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.941243+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.941359+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.941513+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58001 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58001 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:49.942157+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T09:08:49.949257+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T09:08:49.957120+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-05-13T09:08:49.959504+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-13T09:08:49.959591+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-13T09:08:49.959757+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-13T09:08:56.617809+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-13T09:08:56.650146+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:59.593728+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:59.594958+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T09:08:59.599292+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-13T09:08:59.600039+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T09:08:59.603762+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:59.604109+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-13T09:08:59.605378+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:59.605531+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-13T09:08:59.607016+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-13T09:08:59.611380+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:08:59.611677+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-13T09:08:59.614484+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:08:59.619102+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T09:08:59.619880+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T09:08:59.620070+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T09:08:59.623017+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-13T09:08:59.624317+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE classe DROP role_principal {"sql":"    ALTER TABLE classe DROP role_principal"} []
[2025-05-13T09:08:59.628153+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250513090849","2":"2025-05-13 09:08:59","3":5}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250513090849","2":"2025-05-13 09:08:59","3":5},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:08:59.628657+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-05-13T09:08:59.636864+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-13T09:09:04.115186+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-13T09:09:04.150218+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:06.252434+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-13T09:09:06.260867+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event_participation {"sql":"DELETE FROM event_participation"} []
[2025-05-13T09:09:06.262848+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event {"sql":"DELETE FROM event"} []
[2025-05-13T09:09:06.263461+00:00] doctrine.DEBUG: Executing statement: DELETE FROM loot {"sql":"DELETE FROM loot"} []
[2025-05-13T09:09:06.263869+00:00] doctrine.DEBUG: Executing statement: DELETE FROM join_request {"sql":"DELETE FROM join_request"} []
[2025-05-13T09:09:06.264425+00:00] doctrine.DEBUG: Executing statement: DELETE FROM character {"sql":"DELETE FROM character"} []
[2025-05-13T09:09:06.265226+00:00] doctrine.DEBUG: Executing statement: DELETE FROM guild {"sql":"DELETE FROM guild"} []
[2025-05-13T09:09:06.265584+00:00] doctrine.DEBUG: Executing statement: DELETE FROM specialisation {"sql":"DELETE FROM specialisation"} []
[2025-05-13T09:09:06.266023+00:00] doctrine.DEBUG: Executing statement: DELETE FROM classe {"sql":"DELETE FROM classe"} []
[2025-05-13T09:09:06.267778+00:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-05-13T09:09:06.275021+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:09:06.281206+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, icon) VALUES (?, ?, ?) (parameters: array{"1":"Guerrier","2":"#C79C6E","3":"warrior.png"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO classe (name, color, icon) VALUES (?, ?, ?)","params":{"1":"Guerrier","2":"#C79C6E","3":"warrior.png"},"types":{"1":2,"2":2,"3":2}} []
[2025-05-13T09:09:06.281932+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, icon) VALUES (?, ?, ?) (parameters: array{"1":"Mage","2":"#69CCF0","3":"mage.png"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO classe (name, color, icon) VALUES (?, ?, ?)","params":{"1":"Mage","2":"#69CCF0","3":"mage.png"},"types":{"1":2,"2":2,"3":2}} []
[2025-05-13T09:09:06.282202+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, icon) VALUES (?, ?, ?) (parameters: array{"1":"Chasseur","2":"#ABD473","3":"hunter.png"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO classe (name, color, icon) VALUES (?, ?, ?)","params":{"1":"Chasseur","2":"#ABD473","3":"hunter.png"},"types":{"1":2,"2":2,"3":2}} []
[2025-05-13T09:09:06.282423+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, icon) VALUES (?, ?, ?) (parameters: array{"1":"Voleur","2":"#FFF569","3":"rogue.png"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO classe (name, color, icon) VALUES (?, ?, ?)","params":{"1":"Voleur","2":"#FFF569","3":"rogue.png"},"types":{"1":2,"2":2,"3":2}} []
[2025-05-13T09:09:06.282611+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, icon) VALUES (?, ?, ?) (parameters: array{"1":"Prêtre","2":"#FFFFFF","3":"priest.png"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO classe (name, color, icon) VALUES (?, ?, ?)","params":{"1":"Prêtre","2":"#FFFFFF","3":"priest.png"},"types":{"1":2,"2":2,"3":2}} []
[2025-05-13T09:09:06.282802+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, icon) VALUES (?, ?, ?) (parameters: array{"1":"Démoniste","2":"#9482C9","3":"warlock.png"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO classe (name, color, icon) VALUES (?, ?, ?)","params":{"1":"Démoniste","2":"#9482C9","3":"warlock.png"},"types":{"1":2,"2":2,"3":2}} []
[2025-05-13T09:09:06.282978+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, icon) VALUES (?, ?, ?) (parameters: array{"1":"Druide","2":"#FF7D0A","3":"druid.png"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO classe (name, color, icon) VALUES (?, ?, ?)","params":{"1":"Druide","2":"#FF7D0A","3":"druid.png"},"types":{"1":2,"2":2,"3":2}} []
[2025-05-13T09:09:06.283202+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, icon) VALUES (?, ?, ?) (parameters: array{"1":"Chaman","2":"#0070DE","3":"shaman.png"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO classe (name, color, icon) VALUES (?, ?, ?)","params":{"1":"Chaman","2":"#0070DE","3":"shaman.png"},"types":{"1":2,"2":2,"3":2}} []
[2025-05-13T09:09:06.283402+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, icon) VALUES (?, ?, ?) (parameters: array{"1":"Paladin","2":"#F58CBA","3":"paladin.png"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO classe (name, color, icon) VALUES (?, ?, ?)","params":{"1":"Paladin","2":"#F58CBA","3":"paladin.png"},"types":{"1":2,"2":2,"3":2}} []
[2025-05-13T09:09:06.283574+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, icon) VALUES (?, ?, ?) (parameters: array{"1":"Chevalier de la mort","2":"#C41F3B","3":"dk.png"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO classe (name, color, icon) VALUES (?, ?, ?)","params":{"1":"Chevalier de la mort","2":"#C41F3B","3":"dk.png"},"types":{"1":2,"2":2,"3":2}} []
[2025-05-13T09:09:06.283753+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, icon) VALUES (?, ?, ?) (parameters: array{"1":"Moine","2":"#00FF96","3":"monk.png"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO classe (name, color, icon) VALUES (?, ?, ?)","params":{"1":"Moine","2":"#00FF96","3":"monk.png"},"types":{"1":2,"2":2,"3":2}} []
[2025-05-13T09:09:06.284017+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, icon) VALUES (?, ?, ?) (parameters: array{"1":"Chasseur de démons","2":"#A330C9","3":"dh.png"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO classe (name, color, icon) VALUES (?, ?, ?)","params":{"1":"Chasseur de démons","2":"#A330C9","3":"dh.png"},"types":{"1":2,"2":2,"3":2}} []
[2025-05-13T09:09:06.284416+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, icon) VALUES (?, ?, ?) (parameters: array{"1":"Évocateur","2":"#33937F","3":"evoker.png"}, types: array{"1":2,"2":2,"3":2}) {"sql":"INSERT INTO classe (name, color, icon) VALUES (?, ?, ?)","params":{"1":"Évocateur","2":"#33937F","3":"evoker.png"},"types":{"1":2,"2":2,"3":2}} []
[2025-05-13T09:09:06.285432+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:09:06.286934+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Guerrier"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Guerrier"},"types":{"1":2}} []
[2025-05-13T09:09:06.289431+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Mage"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Mage"},"types":{"1":2}} []
[2025-05-13T09:09:06.289670+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chasseur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chasseur"},"types":{"1":2}} []
[2025-05-13T09:09:06.289880+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Paladin"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Paladin"},"types":{"1":2}} []
[2025-05-13T09:09:06.290111+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Prêtre"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Prêtre"},"types":{"1":2}} []
[2025-05-13T09:09:06.290302+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Voleur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Voleur"},"types":{"1":2}} []
[2025-05-13T09:09:06.290614+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Démoniste"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Démoniste"},"types":{"1":2}} []
[2025-05-13T09:09:06.290933+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Druide"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Druide"},"types":{"1":2}} []
[2025-05-13T09:09:06.291194+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chaman"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chaman"},"types":{"1":2}} []
[2025-05-13T09:09:06.291382+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chevalier de la mort"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chevalier de la mort"},"types":{"1":2}} []
[2025-05-13T09:09:06.291565+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Moine"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Moine"},"types":{"1":2}} []
[2025-05-13T09:09:06.291744+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chasseur de démons"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chasseur de démons"},"types":{"1":2}} []
[2025-05-13T09:09:06.291963+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Évocateur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.icon AS icon_4 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Évocateur"},"types":{"1":2}} []
[2025-05-13T09:09:06.292341+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:09:06.292774+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Arms","2":"DPS","3":40}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Arms","2":"DPS","3":40},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.293316+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Fury","2":"DPS","3":40}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Fury","2":"DPS","3":40},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.293634+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Protection","2":"Tank","3":40}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Protection","2":"Tank","3":40},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.293919+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Feu","2":"DPS","3":41}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Feu","2":"DPS","3":41},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.294169+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Givre","2":"DPS","3":41}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Givre","2":"DPS","3":41},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.294529+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Arcane","2":"DPS","3":41}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Arcane","2":"DPS","3":41},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.294968+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Précision","2":"DPS","3":42}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Précision","2":"DPS","3":42},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.295362+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Maîtrise des bêtes","2":"DPS","3":42}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Maîtrise des bêtes","2":"DPS","3":42},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.295738+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Survie","2":"DPS","3":42}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Survie","2":"DPS","3":42},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.296101+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Sacré","2":"Heal","3":48}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Sacré","2":"Heal","3":48},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.296497+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Protection","2":"Tank","3":48}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Protection","2":"Tank","3":48},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.296876+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Vindicte","2":"DPS","3":48}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Vindicte","2":"DPS","3":48},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.297251+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Discipline","2":"Heal","3":44}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Discipline","2":"Heal","3":44},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.297624+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Sacré","2":"Heal","3":44}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Sacré","2":"Heal","3":44},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.297992+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Ombre","2":"DPS","3":44}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Ombre","2":"DPS","3":44},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.298406+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Assassinat","2":"DPS","3":43}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Assassinat","2":"DPS","3":43},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.298803+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Finesse","2":"DPS","3":43}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Finesse","2":"DPS","3":43},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.299175+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Hors-la-loi","2":"DPS","3":43}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Hors-la-loi","2":"DPS","3":43},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.299539+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Destruction","2":"DPS","3":45}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Destruction","2":"DPS","3":45},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.299984+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Démonologie","2":"DPS","3":45}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Démonologie","2":"DPS","3":45},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.300254+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Affliction","2":"DPS","3":45}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Affliction","2":"DPS","3":45},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.300506+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Équilibre","2":"DPS","3":46}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Équilibre","2":"DPS","3":46},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.300725+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Farouche","2":"DPS","3":46}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Farouche","2":"DPS","3":46},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.300964+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Gardien","2":"Tank","3":46}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Gardien","2":"Tank","3":46},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.301206+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Restauration","2":"Heal","3":46}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Restauration","2":"Heal","3":46},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.301418+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Amélioration","2":"DPS","3":47}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Amélioration","2":"DPS","3":47},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.301639+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Élémentaire","2":"DPS","3":47}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Élémentaire","2":"DPS","3":47},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.301859+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Restauration","2":"Heal","3":47}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Restauration","2":"Heal","3":47},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.302085+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Sang","2":"Tank","3":49}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Sang","2":"Tank","3":49},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.302282+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Givre","2":"DPS","3":49}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Givre","2":"DPS","3":49},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.302466+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Impie","2":"DPS","3":49}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Impie","2":"DPS","3":49},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.302651+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Maître brasseur","2":"Tank","3":50}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Maître brasseur","2":"Tank","3":50},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.302961+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Tisse-brume","2":"Heal","3":50}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Tisse-brume","2":"Heal","3":50},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.303362+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Marche-vent","2":"DPS","3":50}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Marche-vent","2":"DPS","3":50},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.303600+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Dévastation","2":"DPS","3":51}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Dévastation","2":"DPS","3":51},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.303814+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Vengeance","2":"Tank","3":51}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Vengeance","2":"Tank","3":51},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.304023+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Augmentation","2":"DPS","3":52}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Augmentation","2":"DPS","3":52},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.304218+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Préservation","2":"Heal","3":52}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Préservation","2":"Heal","3":52},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.304413+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Dévastation","2":"DPS","3":52}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Dévastation","2":"DPS","3":52},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:06.304631+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:09:06.304738+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-05-13T09:09:06.305867+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-13T09:09:42.545933+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-13T09:09:42.632470+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:42.635706+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T09:09:42.637815+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-13T09:09:42.638893+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T09:09:42.639164+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:42.639401+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T09:09:42.644772+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:42.645099+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-13T09:09:42.646495+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:42.646855+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-13T09:09:42.647972+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-13T09:09:42.652859+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:42.653130+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-13T09:09:42.653953+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.655648+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T09:09:42.658224+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:42.658543+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T09:09:42.659751+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:42.659937+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T09:09:42.660875+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:42.661048+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-13T09:09:42.661621+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:42.661767+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-13T09:09:42.662724+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-13T09:09:42.664938+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:42.665227+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-13T09:09:42.666691+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.667147+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T09:09:42.668562+00:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2025-05-13T09:09:42.669078+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:42.669321+00:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                        increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'wow_assistance'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value,\n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'wow_assistance'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2025-05-13T09:09:42.671131+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:42.671416+00:00] doctrine.DEBUG: Executing query: SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT c.relname AS table_name, n.nspname AS schema_name,            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-13T09:09:42.678598+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-13T09:09:42.679119+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T09:09:42.679468+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-13T09:09:42.680555+00:00] doctrine.DEBUG: Executing query: SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT tc.relname AS table_name, tn.nspname AS schema_name,                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-13T09:09:42.681161+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-13T09:09:42.681695+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58001 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58001 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.681966+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.682132+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57982 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.682763+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58077 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58077 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.682934+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58077 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58077 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.683168+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57970 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57970 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.683376+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.683547+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57936 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.683718+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.683924+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (8) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (8) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.684108+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (7) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.684252+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (6) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.684381+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57961 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.684629+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (7) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.684813+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (6) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.684993+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (4) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (4) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.685170+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57946 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.685373+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.685552+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58020 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.685793+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (3) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (3) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.685978+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.686168+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=58010 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.686385+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (3) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (3) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.686581+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (2) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.686735+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57992 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:42.687540+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T09:09:42.695025+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T09:09:42.701685+00:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2191 called by AbstractPlatform.php:2110, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at /Users/luciencabanel/Documents/Semestre 5/Symfony/WoW-Assistance/wow-assistance/vendor/doctrine/deprecations/src/Deprecation.php:208)"} []
[2025-05-13T09:09:42.703736+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-13T09:09:42.703830+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-13T09:09:42.703973+00:00] doctrine.DEBUG: Executing statement: UNLISTEN "messenger_messages" {"sql":"UNLISTEN \"messenger_messages\""} []
[2025-05-13T09:09:46.964998+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-13T09:09:47.006795+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:51.626424+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:51.627377+00:00] doctrine.DEBUG: Executing statement: SELECT quote_ident(table_name) AS table_name,        table_schema AS schema_name FROM information_schema.tables WHERE table_catalog = ?   AND table_schema NOT LIKE 'pg\_%'   AND table_schema != 'information_schema'   AND table_name != 'geometry_columns'   AND table_name != 'spatial_ref_sys'   AND table_type = 'BASE TABLE' (parameters: array{"1":"wow_assistance"}, types: array{"1":2}) {"sql":"SELECT quote_ident(table_name) AS table_name,\n       table_schema AS schema_name\nFROM information_schema.tables\nWHERE table_catalog = ?\n  AND table_schema NOT LIKE 'pg\\_%'\n  AND table_schema != 'information_schema'\n  AND table_name != 'geometry_columns'\n  AND table_name != 'spatial_ref_sys'\n  AND table_type = 'BASE TABLE'","params":{"1":"wow_assistance"},"types":{"1":2}} []
[2025-05-13T09:09:51.632821+00:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2025-05-13T09:09:51.633487+00:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2025-05-13T09:09:51.637468+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:51.637681+00:00] doctrine.DEBUG: Executing query: SELECT c.relname,        CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,        obj_description(c.oid, 'pg_class') AS comment FROM pg_class c      INNER JOIN pg_namespace n          ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') {"sql":"SELECT c.relname,\n       CASE c.relpersistence WHEN 'u' THEN true ELSE false END as unlogged,\n       obj_description(c.oid, 'pg_class') AS comment\nFROM pg_class c\n     INNER JOIN pg_namespace n\n         ON n.oid = c.relnamespace WHERE c.relkind = 'r' AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')"} []
[2025-05-13T09:09:51.638764+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:51.638913+00:00] doctrine.DEBUG: Executing query: SELECT                  quote_ident(r.conname) as conname,                   pg_get_constraintdef(r.oid, true) as condef                   FROM pg_constraint r                       JOIN pg_class AS tc ON tc.oid = r.conrelid                       JOIN pg_namespace tn ON tn.oid = tc.relnamespace                   WHERE r.conrelid IN                   (                       SELECT c.oid                       FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f' {"sql":"SELECT                  quote_ident(r.conname) as conname,\n                  pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_constraint r\n                      JOIN pg_class AS tc ON tc.oid = r.conrelid\n                      JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                  WHERE r.conrelid IN\n                  (\n                      SELECT c.oid\n                      FROM pg_class c, pg_namespace n WHERE n.oid = c.relnamespace AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) AND r.contype = 'f'"} []
[2025-05-13T09:09:51.640319+00:00] doctrine.DEBUG: Executing query: SELECT            a.attnum,             quote_ident(a.attname) AS field,             t.typname AS type,             format_type(a.atttypid, a.atttypmod) AS complete_type,             (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,             (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,             (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM               pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,             a.attnotnull AS isnotnull,             (SELECT 't'              FROM pg_index              WHERE c.oid = pg_index.indrelid                 AND pg_index.indkey[0] = a.attnum                 AND pg_index.indisprimary = 't'             ) AS pri,             (    SELECT         CASE             WHEN a.attgenerated = 's' THEN NULL             ELSE pg_get_expr(adbin, adrelid)         END      FROM pg_attrdef      WHERE c.oid = pg_attrdef.adrelid         AND pg_attrdef.adnum=a.attnum) AS default,             (SELECT pg_description.description                 FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid             ) AS comment             FROM pg_attribute a                 INNER JOIN pg_class c                     ON c.oid = a.attrelid                 INNER JOIN pg_type t                     ON t.oid = a.atttypid                 INNER JOIN pg_namespace n                     ON n.oid = c.relnamespace                 LEFT JOIN pg_depend d                     ON d.objid = c.oid                         AND d.deptype = 'e'                         AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum {"sql":"SELECT            a.attnum,\n            quote_ident(a.attname) AS field,\n            t.typname AS type,\n            format_type(a.atttypid, a.atttypmod) AS complete_type,\n            (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n            (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n            (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n              pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n            a.attnotnull AS isnotnull,\n            (SELECT 't'\n             FROM pg_index\n             WHERE c.oid = pg_index.indrelid\n                AND pg_index.indkey[0] = a.attnum\n                AND pg_index.indisprimary = 't'\n            ) AS pri,\n            (    SELECT\n        CASE\n            WHEN a.attgenerated = 's' THEN NULL\n            ELSE pg_get_expr(adbin, adrelid)\n        END\n     FROM pg_attrdef\n     WHERE c.oid = pg_attrdef.adrelid\n        AND pg_attrdef.adnum=a.attnum) AS default,\n            (SELECT pg_description.description\n                FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n            ) AS comment\n            FROM pg_attribute a\n                INNER JOIN pg_class c\n                    ON c.oid = a.attrelid\n                INNER JOIN pg_type t\n                    ON t.oid = a.atttypid\n                INNER JOIN pg_namespace n\n                    ON n.oid = c.relnamespace\n                LEFT JOIN pg_depend d\n                    ON d.objid = c.oid\n                        AND d.deptype = 'e'\n                        AND d.classid = (SELECT oid FROM pg_class WHERE relname = 'pg_class') WHERE a.attnum > 0 AND c.relkind = 'r' AND d.refobjid IS NULL AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') ORDER BY a.attnum"} []
[2025-05-13T09:09:51.647241+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:09:51.647554+00:00] doctrine.DEBUG: Executing query: SELECT                   quote_ident(ic.relname) AS relname,                    i.indisunique,                    i.indisprimary,                    i.indkey,                    i.indrelid,                    pg_get_expr(indpred, indrelid) AS "where"               FROM pg_index i                    JOIN pg_class AS tc ON tc.oid = i.indrelid                    JOIN pg_namespace tn ON tn.oid = tc.relnamespace                    JOIN pg_class AS ic ON ic.oid = i.indexrelid              WHERE ic.oid IN (                 SELECT indexrelid                 FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')) {"sql":"SELECT                   quote_ident(ic.relname) AS relname,\n                   i.indisunique,\n                   i.indisprimary,\n                   i.indkey,\n                   i.indrelid,\n                   pg_get_expr(indpred, indrelid) AS \"where\"\n              FROM pg_index i\n                   JOIN pg_class AS tc ON tc.oid = i.indrelid\n                   JOIN pg_namespace tn ON tn.oid = tc.relnamespace\n                   JOIN pg_class AS ic ON ic.oid = i.indexrelid\n             WHERE ic.oid IN (\n                SELECT indexrelid\n                FROM pg_index i, pg_class c, pg_namespace n WHERE c.oid = i.indrelid AND c.relnamespace = n.oid AND n.nspname = ANY(current_schemas(false)) AND c.relname = 'doctrine_migration_versions' AND n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast'))"} []
[2025-05-13T09:09:51.649553+00:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=57929 AND attnum IN (1) ORDER BY attnum ASC"} []
[2025-05-13T09:09:51.652940+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T09:09:51.653577+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T09:09:51.653815+00:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2025-05-13T09:09:51.655827+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-13T09:09:51.656745+00:00] doctrine.DEBUG: Executing query:     ALTER TABLE classe ADD role_principal VARCHAR(255) DEFAULT NULL {"sql":"    ALTER TABLE classe ADD role_principal VARCHAR(255) DEFAULT NULL"} []
[2025-05-13T09:09:51.659741+00:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20250513090942","2":"2025-05-13 09:09:51","3":4}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20250513090942","2":"2025-05-13 09:09:51","3":4},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:09:51.660375+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-05-13T09:09:51.668065+00:00] doctrine.INFO: Disconnecting [] []
[2025-05-13T09:09:58.544932+00:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"} {"params":{"use_savepoints":true,"driver":"pdo_pgsql","idle_connection_ttl":600,"host":"127.0.0.1","port":5433,"user":"lucien","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"wow_assistance","serverVersion":"15","charset":"utf8"}} []
[2025-05-13T09:09:58.580204+00:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2025-05-13T09:10:00.659834+00:00] doctrine.DEBUG: Beginning transaction [] []
[2025-05-13T09:10:00.668673+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event_participation {"sql":"DELETE FROM event_participation"} []
[2025-05-13T09:10:00.669976+00:00] doctrine.DEBUG: Executing statement: DELETE FROM event {"sql":"DELETE FROM event"} []
[2025-05-13T09:10:00.670458+00:00] doctrine.DEBUG: Executing statement: DELETE FROM loot {"sql":"DELETE FROM loot"} []
[2025-05-13T09:10:00.670848+00:00] doctrine.DEBUG: Executing statement: DELETE FROM join_request {"sql":"DELETE FROM join_request"} []
[2025-05-13T09:10:00.671315+00:00] doctrine.DEBUG: Executing statement: DELETE FROM character {"sql":"DELETE FROM character"} []
[2025-05-13T09:10:00.671965+00:00] doctrine.DEBUG: Executing statement: DELETE FROM guild {"sql":"DELETE FROM guild"} []
[2025-05-13T09:10:00.672306+00:00] doctrine.DEBUG: Executing statement: DELETE FROM specialisation {"sql":"DELETE FROM specialisation"} []
[2025-05-13T09:10:00.672811+00:00] doctrine.DEBUG: Executing statement: DELETE FROM classe {"sql":"DELETE FROM classe"} []
[2025-05-13T09:10:00.675801+00:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2025-05-13T09:10:00.681843+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:10:00.687934+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Guerrier","2":"#C79C6E","3":null,"4":"warrior.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Guerrier","2":"#C79C6E","3":null,"4":"warrior.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:10:00.688816+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Mage","2":"#69CCF0","3":null,"4":"mage.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Mage","2":"#69CCF0","3":null,"4":"mage.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:10:00.689165+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chasseur","2":"#ABD473","3":null,"4":"hunter.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chasseur","2":"#ABD473","3":null,"4":"hunter.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:10:00.689568+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Voleur","2":"#FFF569","3":null,"4":"rogue.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Voleur","2":"#FFF569","3":null,"4":"rogue.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:10:00.689933+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Prêtre","2":"#FFFFFF","3":null,"4":"priest.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Prêtre","2":"#FFFFFF","3":null,"4":"priest.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:10:00.690294+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Démoniste","2":"#9482C9","3":null,"4":"warlock.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Démoniste","2":"#9482C9","3":null,"4":"warlock.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:10:00.690652+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Druide","2":"#FF7D0A","3":null,"4":"druid.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Druide","2":"#FF7D0A","3":null,"4":"druid.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:10:00.690987+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chaman","2":"#0070DE","3":null,"4":"shaman.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chaman","2":"#0070DE","3":null,"4":"shaman.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:10:00.691317+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Paladin","2":"#F58CBA","3":null,"4":"paladin.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Paladin","2":"#F58CBA","3":null,"4":"paladin.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:10:00.691640+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chevalier de la mort","2":"#C41F3B","3":null,"4":"dk.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chevalier de la mort","2":"#C41F3B","3":null,"4":"dk.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:10:00.691969+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Moine","2":"#00FF96","3":null,"4":"monk.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Moine","2":"#00FF96","3":null,"4":"monk.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:10:00.692292+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Chasseur de démons","2":"#A330C9","3":null,"4":"dh.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Chasseur de démons","2":"#A330C9","3":null,"4":"dh.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:10:00.692619+00:00] doctrine.DEBUG: Executing statement: INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?) (parameters: array{"1":"Évocateur","2":"#33937F","3":null,"4":"evoker.png"}, types: array{"1":2,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO classe (name, color, role_principal, icon) VALUES (?, ?, ?, ?)","params":{"1":"Évocateur","2":"#33937F","3":null,"4":"evoker.png"},"types":{"1":2,"2":2,"3":2,"4":2}} []
[2025-05-13T09:10:00.693469+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:10:00.694566+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Guerrier"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Guerrier"},"types":{"1":2}} []
[2025-05-13T09:10:00.697887+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Mage"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Mage"},"types":{"1":2}} []
[2025-05-13T09:10:00.698213+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chasseur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chasseur"},"types":{"1":2}} []
[2025-05-13T09:10:00.698506+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Paladin"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Paladin"},"types":{"1":2}} []
[2025-05-13T09:10:00.698749+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Prêtre"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Prêtre"},"types":{"1":2}} []
[2025-05-13T09:10:00.698979+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Voleur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Voleur"},"types":{"1":2}} []
[2025-05-13T09:10:00.699193+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Démoniste"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Démoniste"},"types":{"1":2}} []
[2025-05-13T09:10:00.699418+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Druide"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Druide"},"types":{"1":2}} []
[2025-05-13T09:10:00.699626+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chaman"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chaman"},"types":{"1":2}} []
[2025-05-13T09:10:00.699834+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chevalier de la mort"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chevalier de la mort"},"types":{"1":2}} []
[2025-05-13T09:10:00.700037+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Moine"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Moine"},"types":{"1":2}} []
[2025-05-13T09:10:00.700221+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Chasseur de démons"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Chasseur de démons"},"types":{"1":2}} []
[2025-05-13T09:10:00.700418+00:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1 (parameters: array{"1":"Évocateur"}, types: array{"1":2}) {"sql":"SELECT t0.id AS id_1, t0.name AS name_2, t0.color AS color_3, t0.role_principal AS role_principal_4, t0.icon AS icon_5 FROM classe t0 WHERE t0.name = ? LIMIT 1","params":{"1":"Évocateur"},"types":{"1":2}} []
[2025-05-13T09:10:00.700832+00:00] doctrine.DEBUG: Executing statement: SAVEPOINT DOCTRINE_2 {"sql":"SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:10:00.701249+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Arms","2":"DPS","3":53}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Arms","2":"DPS","3":53},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.701826+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Fury","2":"DPS","3":53}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Fury","2":"DPS","3":53},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.702148+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Protection","2":"Tank","3":53}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Protection","2":"Tank","3":53},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.702461+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Feu","2":"DPS","3":54}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Feu","2":"DPS","3":54},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.702796+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Givre","2":"DPS","3":54}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Givre","2":"DPS","3":54},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.703083+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Arcane","2":"DPS","3":54}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Arcane","2":"DPS","3":54},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.703364+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Précision","2":"DPS","3":55}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Précision","2":"DPS","3":55},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.703626+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Maîtrise des bêtes","2":"DPS","3":55}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Maîtrise des bêtes","2":"DPS","3":55},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.703907+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Survie","2":"DPS","3":55}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Survie","2":"DPS","3":55},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.704174+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Sacré","2":"Heal","3":61}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Sacré","2":"Heal","3":61},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.704438+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Protection","2":"Tank","3":61}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Protection","2":"Tank","3":61},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.704721+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Vindicte","2":"DPS","3":61}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Vindicte","2":"DPS","3":61},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.705064+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Discipline","2":"Heal","3":57}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Discipline","2":"Heal","3":57},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.705397+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Sacré","2":"Heal","3":57}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Sacré","2":"Heal","3":57},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.705758+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Ombre","2":"DPS","3":57}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Ombre","2":"DPS","3":57},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.706098+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Assassinat","2":"DPS","3":56}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Assassinat","2":"DPS","3":56},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.706847+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Finesse","2":"DPS","3":56}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Finesse","2":"DPS","3":56},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.707266+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Hors-la-loi","2":"DPS","3":56}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Hors-la-loi","2":"DPS","3":56},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.707574+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Destruction","2":"DPS","3":58}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Destruction","2":"DPS","3":58},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.707846+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Démonologie","2":"DPS","3":58}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Démonologie","2":"DPS","3":58},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.708114+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Affliction","2":"DPS","3":58}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Affliction","2":"DPS","3":58},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.708372+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Équilibre","2":"DPS","3":59}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Équilibre","2":"DPS","3":59},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.708626+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Farouche","2":"DPS","3":59}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Farouche","2":"DPS","3":59},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.708888+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Gardien","2":"Tank","3":59}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Gardien","2":"Tank","3":59},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.709147+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Restauration","2":"Heal","3":59}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Restauration","2":"Heal","3":59},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.709408+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Amélioration","2":"DPS","3":60}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Amélioration","2":"DPS","3":60},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.709667+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Élémentaire","2":"DPS","3":60}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Élémentaire","2":"DPS","3":60},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.709918+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Restauration","2":"Heal","3":60}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Restauration","2":"Heal","3":60},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.710185+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Sang","2":"Tank","3":62}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Sang","2":"Tank","3":62},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.710445+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Givre","2":"DPS","3":62}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Givre","2":"DPS","3":62},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.710753+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Impie","2":"DPS","3":62}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Impie","2":"DPS","3":62},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.711099+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Maître brasseur","2":"Tank","3":63}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Maître brasseur","2":"Tank","3":63},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.711400+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Tisse-brume","2":"Heal","3":63}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Tisse-brume","2":"Heal","3":63},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.711672+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Marche-vent","2":"DPS","3":63}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Marche-vent","2":"DPS","3":63},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.711951+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Dévastation","2":"DPS","3":64}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Dévastation","2":"DPS","3":64},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.712212+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Vengeance","2":"Tank","3":64}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Vengeance","2":"Tank","3":64},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.712493+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Augmentation","2":"DPS","3":65}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Augmentation","2":"DPS","3":65},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.712976+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Préservation","2":"Heal","3":65}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Préservation","2":"Heal","3":65},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.713257+00:00] doctrine.DEBUG: Executing statement: INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?) (parameters: array{"1":"Dévastation","2":"DPS","3":65}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO specialisation (name, role, classe_id) VALUES (?, ?, ?)","params":{"1":"Dévastation","2":"DPS","3":65},"types":{"1":2,"2":2,"3":1}} []
[2025-05-13T09:10:00.713888+00:00] doctrine.DEBUG: Executing statement: RELEASE SAVEPOINT DOCTRINE_2 {"sql":"RELEASE SAVEPOINT DOCTRINE_2"} []
[2025-05-13T09:10:00.714068+00:00] doctrine.DEBUG: Committing transaction [] []
[2025-05-13T09:10:00.719306+00:00] doctrine.INFO: Disconnecting [] []
